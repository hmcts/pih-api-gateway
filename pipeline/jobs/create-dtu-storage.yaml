parameters:
  - name: dependsOn
    type: object
    default: ''

  - name: displayName
    type: string

  - name: subscription
    type: string

  - name: environmentName
    type: string

jobs:
  - job: CreateDtuStorage
    dependsOn:
      - ${{ if parameters.dependsOn }}:
          - ${{ parameters.dependsOn }}
    displayName: ${{ parameters.displayName }}
    pool:
      vmImage: 'windows-latest'
    steps:
      - task: AzureCLI@2
        displayName: createDtuContainer
        name: createDtuContainer
        inputs:
          azureSubscription: ${{ parameters.subscription }}
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            echo "Obtaining storage key..."
            accountName="pipdtu$(environment)"
            resourceGroup="pip-sharedinfra-$(environment)-rg"
            kvName="pip-shared-kv-$(environment)"
            
            az storage account create -n $accountName -g $resourceGroup -l "uksouth" --sku Standard_LRS --kind StorageV2 --tags application=hearing-management-interface businessarea=cross-cutting environment=${{ parameters.environmentName }}
            echo "Acquiring storage key"
            key=$(az storage account keys list -g $resourceGroup --account-name $accountName --query "[0].value" -o tsv)
            echo "##vso[task.setvariable variable=storageKey;issecret=true;]$key"
            echo "Creating containers..."
            az storage container create --name "cft" --account-name $accountName --account-key $key
            echo "- cft"
            echo "Updating Key Vault $kvName"
            az keyvault secret set --name "dtu-storage-account-key" --value $key --vault-name $kvName
            cho "Creating containers complete"
